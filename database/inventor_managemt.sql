-- MySQL Script generated by MySQL Workbench
-- Wed Nov 27 00:16:09 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema inventor_management
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `inventor_management` ;

-- -----------------------------------------------------
-- Schema inventor_management
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `inventor_management` DEFAULT CHARACTER SET utf8 ;
USE `inventor_management` ;

-- -----------------------------------------------------
-- Table `inventor_management`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventor_management`.`users` ;

CREATE TABLE IF NOT EXISTS `inventor_management`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_name` VARCHAR(45) NOT NULL,
  `password` VARCHAR(100) NOT NULL,
  `email` VARCHAR(145) NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  `active_flag` INT(1) NOT NULL DEFAULT 0,
  `create_datetime` TIMESTAMP NULL,
  `update_datetime` TIMESTAMP NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventor_management`.`role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventor_management`.`role` ;

CREATE TABLE IF NOT EXISTS `inventor_management`.`role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `role_name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(100) NOT NULL,
  `active_flag` INT(1) NOT NULL DEFAULT 0,
  `create_datetime` TIMESTAMP NULL,
  `update_datetime` TIMESTAMP NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventor_management`.`user_role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventor_management`.`user_role` ;

CREATE TABLE IF NOT EXISTS `inventor_management`.`user_role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `active_flag` INT(1) NOT NULL DEFAULT 0,
  `create_datetime` TIMESTAMP NULL,
  `update_datetime` TIMESTAMP NULL,
  `users_id` INT NOT NULL,
  `role_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_role_users1_idx` (`users_id` ASC) VISIBLE,
  INDEX `fk_user_role_role1_idx` (`role_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_role_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `inventor_management`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_role_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `inventor_management`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventor_management`.`menu`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventor_management`.`menu` ;

CREATE TABLE IF NOT EXISTS `inventor_management`.`menu` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `parent_id` INT NULL,
  `url` VARCHAR(100) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `order_index` INT NOT NULL,
  `menucol` VARCHAR(45) NULL,
  `active_flag` INT(1) NULL DEFAULT 0,
  `create_datetime` TIMESTAMP NULL,
  `update_datetime` TIMESTAMP NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventor_management`.`auth`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventor_management`.`auth` ;

CREATE TABLE IF NOT EXISTS `inventor_management`.`auth` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `permssion` INT(1) NOT NULL,
  `create_datetime` TIMESTAMP NULL,
  `update_datetime` TIMESTAMP NULL,
  `role_id` INT NOT NULL,
  `menu_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_auth_role1_idx` (`role_id` ASC) VISIBLE,
  INDEX `fk_auth_menu1_idx` (`menu_id` ASC) VISIBLE,
  CONSTRAINT `fk_auth_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `inventor_management`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_auth_menu1`
    FOREIGN KEY (`menu_id`)
    REFERENCES `inventor_management`.`menu` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventor_management`.`category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventor_management`.`category` ;

CREATE TABLE IF NOT EXISTS `inventor_management`.`category` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `code` VARCHAR(145) NOT NULL,
  `description` TEXT NOT NULL,
  `active_flag` INT(1) NOT NULL DEFAULT 0,
  `create_datetime` TIMESTAMP NULL,
  `update_datetime` TIMESTAMP NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventor_management`.`product_infor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventor_management`.`product_infor` ;

CREATE TABLE IF NOT EXISTS `inventor_management`.`product_infor` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `code` VARCHAR(45) NOT NULL,
  `desciption` TEXT NOT NULL,
  `img_url` TEXT NOT NULL,
  `active_flag` INT(1) NOT NULL DEFAULT 0,
  `create_datetime` TIMESTAMP NULL,
  `update_datetime` TIMESTAMP NULL,
  `category_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_product_infor_category_idx` (`category_id` ASC) VISIBLE,
  CONSTRAINT `fk_product_infor_category`
    FOREIGN KEY (`category_id`)
    REFERENCES `inventor_management`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventor_management`.`invoke`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventor_management`.`invoke` ;

CREATE TABLE IF NOT EXISTS `inventor_management`.`invoke` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type` INT(1) NULL,
  `code` VARCHAR(145) NULL,
  `qty` INT NULL,
  `price` DECIMAL(15,2) NULL,
  `active_flag` INT(1) NULL,
  `create_datetime` TIMESTAMP NULL,
  `update_datetime` TIMESTAMP NULL,
  `product_infor_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_invoke_product_infor1_idx` (`product_infor_id` ASC) VISIBLE,
  CONSTRAINT `fk_invoke_product_infor1`
    FOREIGN KEY (`product_infor_id`)
    REFERENCES `inventor_management`.`product_infor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventor_management`.`history`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventor_management`.`history` ;

CREATE TABLE IF NOT EXISTS `inventor_management`.`history` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `action_name` VARCHAR(145) NOT NULL,
  `type` INT NULL,
  `qty` INT NULL,
  `price` DECIMAL(15,2) NULL,
  `active_flag` INT(1) NULL,
  `create_datetime` TIMESTAMP NULL,
  `update_datetime` TIMESTAMP NULL,
  `product_infor_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_history_product_infor1_idx` (`product_infor_id` ASC) VISIBLE,
  CONSTRAINT `fk_history_product_infor1`
    FOREIGN KEY (`product_infor_id`)
    REFERENCES `inventor_management`.`product_infor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventor_management`.`product_in_stock`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventor_management`.`product_in_stock` ;

CREATE TABLE IF NOT EXISTS `inventor_management`.`product_in_stock` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `qty` INT NOT NULL,
  `price` DECIMAL(15) NOT NULL,
  `active_flag` INT(1) NOT NULL DEFAULT 0,
  `create_datetime` TIMESTAMP NULL,
  `update_datetime` TIMESTAMP NULL,
  `product_infor_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_product_in_stock_product_infor1_idx` (`product_infor_id` ASC) VISIBLE,
  CONSTRAINT `fk_product_in_stock_product_infor1`
    FOREIGN KEY (`product_infor_id`)
    REFERENCES `inventor_management`.`product_infor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
